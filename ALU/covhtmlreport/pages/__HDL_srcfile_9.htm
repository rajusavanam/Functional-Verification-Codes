
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-w>class</q-w> alu_mon <q-w>extends</q-w> uvm_monitor;
<a name="2"><q-n>     2  </q-n></a>	alu_tx tx;
<a name="3"><q-n>     3  </q-n></a>	<q-w>virtual</q-w> alu_intfc vif;
<a name="4"><q-n>     4  </q-n></a>	uvm_analysis_port#(alu_tx)ap_port;
<a name="5"><q-n>     5  </q-n></a>	`uvm_component_utils(alu_mon)
<a name="6"><q-n>     6  </q-n></a>	`NEW_COMP
<a name="7"><q-n>     7  </q-n></a>	<q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="8"><q-n>     8  </q-n></a>		ap_port = <q-w>new</q-w>(<q-l>"ap_port"</q-l>,<q-w>this</q-w>);
<a name="9"><q-n>     9  </q-n></a>		uvm_config_db#(<q-w>virtual</q-w> alu_intfc)::get(<q-w>null</q-w>,<q-l>""</q-l>,<q-l>"ALU_INTFC"</q-l>,vif);
<a name="10"><q-n>     10  </q-n></a>	<q-w>endfunction</q-w>
<a name="11"><q-n>     11  </q-n></a>
<a name="12"><q-n>     12  </q-n></a>	<q-w>task</q-w> run_phase(uvm_phase phase);
<a name="13"><q-n>     13  </q-n></a>		<q-w>forever</q-w> <q-w>begin</q-w>
<a name="14"><q-n>     14  </q-n></a>		<q-m>/*	@(posedge vif.clk_i)</q-m>
<a name="15"><q-n>     15  </q-n></a><q-m>			if(vif.valid_i==1 &amp;&amp; vif.ready_o==1)begin</q-m>
<a name="16"><q-n>     16  </q-n></a><q-m>				tx = alu_tx::type_id::create("tx");</q-m>
<a name="17"><q-n>     17  </q-n></a><q-m>				tx.ope_a = vif.operand_a;</q-m>
<a name="18"><q-n>     18  </q-n></a><q-m>				tx.ope_b = vif.operand_b;</q-m>
<a name="19"><q-n>     19  </q-n></a><q-m>				tx.ope = vif.operation;</q-m>
<a name="20"><q-n>     20  </q-n></a><q-m>				ap_port.write(tx);</q-m>
<a name="21"><q-n>     21  </q-n></a><q-m>			end</q-m>
<a name="22"><q-n>     22  </q-n></a><q-m>		*/</q-m>
<a name="23"><q-n>     23  </q-n></a>			@(vif.mon_cb)
<a name="24"><q-n>     24  </q-n></a>			<q-w>if</q-w>(vif.mon_cb.valid_i==1 &amp;&amp; vif.mon_cb.ready_o==1)<q-w>begin</q-w>
<a name="25"><q-n>     25  </q-n></a>				tx = alu_tx::type_id::create(<q-l>"tx"</q-l>);
<a name="26"><q-n>     26  </q-n></a>				tx.ope_a = vif.mon_cb.operand_a;
<a name="27"><q-n>     27  </q-n></a>				tx.ope_b = vif.mon_cb.operand_b;
<a name="28"><q-n>     28  </q-n></a>				tx.ope = vif.mon_cb.operation;
<a name="29"><q-n>     29  </q-n></a>				ap_port.write(tx);
<a name="30"><q-n>     30  </q-n></a>			<q-w>end</q-w>
<a name="31"><q-n>     31  </q-n></a>		<q-w>end</q-w>
<a name="32"><q-n>     32  </q-n></a>	<q-w>endtask</q-w>
<a name="33"><q-n>     33  </q-n></a><q-w>endclass</q-w>
</pre>
</tt>

  
</body>
</html>
